◆発表日  : 平成23年2月17日(木)
◆発表会場: 工学部棟4号館 2階 11番講義室
◆発表題目: 複数OS走行環境におけるマルチコアCPUの計算資源分割制御方法
            に関する研究
◆発表者  : 牛尾 裕
◆論文概要:
 計算機性能の向上に伴い，1台の計算機上に複数のOSを走行させる研究が活発
に行われている．これらの研究の1つとして，1台の計算機上のシングルコアCP
Uで2つのLinuxを独立に走行させるTwinOSが実現されている．TwinOSは，CPU，
メモリ，および入出力機器といった各資源について効果的な共有と占有を行う
ことにより，1台の計算機上で2つのLinuxの走行を実現している．また，TwinO
SをマルチコアCPUに対応させ，各コア上でOSを走行できるMintオペレーティン
グシステムを研究開発している．しかし，現在のMintオペレーティングシステ
ムは，CPUのコアの分割粒度が粗いため，コア数より多くのOSを走行させるこ
とができない．
 そこで，複数OS走行環境において，より細かい粒度でマルチコアCPUの計算資
源を分割制御する方法について提案する．提案方法は，Mintオペレーティング
システムのマルチコアCPUの分割単位としてコア単位での分割制御に加え，
時間単位での分割制御を導入し，コア単位と時間単位の分割制御の併用により，
各OSにCPUの計算資源を割り当てる．この制御方法により，柔軟な計算資源の
割り当てを実現できる．例えば，1つのOSに合計1コア半の計算資源を割り当て
るといった，変則的なマルチコアCPUの分割制御も可能となる．
 本稿では，マルチコアCPUの併用分割制御法の実現に向けた課題を示した．マ
ルチコアCPUの併用分割制御法の実現には，シングルコア時分割制御の実装，
シングルコア時分割制御のマルチコアCPU対応，およびコア分割と時分割の併
用利用対応の実現が必要である．これらの内，シングルコアの時分割制御の実
装における課題と設計，および実装について述べた．シングルコアの時分割制
御は，TwinOSで既に実現されているが，TwinOSの実装には3つ以上のOSを走行
できない，マルチコア上で動作できないという2つの問題があり，そのまま流
用できない．このため，TwinOSの実装方法を見直し，新たにマルチコアに対応
を見越したシングルコア時分割制御の課題を示した．更に，この課題に対処し
た設計，および実装法を示した．また，マルチコアCPUの併用分割制御法の実
現における残された課題を示した．

◆質疑応答(敬称略)◆
Q1: OS切換の頻度は，どのぐらいか．(名古屋)
A1: ローカルタイマ割り込みの発生頻度に依存する．
Q2: ローカルタイマ割り込みの発生頻度は普通どのくらいか．(乃村)
A2: おそらく数ミリ秒に1度程度である．

Q3: MTの配置場所として，何故(案2)を選んだのか．(阿部)
A3: (案1)と(案2)をオーバヘッドの観点から比較したとき，(案2)の方がオー
    バヘッドが小さい．OS切換の発生頻度のことも考慮すると，オーバヘッド
    は，できるだけ小さいほうが良い．このため，(案2)で実装した．

Q4: スライドの3枚目に「並行に走行可能なOS数がコア数に依存しない」と書
    かれてあるが，これはどういう意図で書いたのか．(渡邊)
A4: 1つのコアで複数のOSを走行できるという意図で記述した．
Q5: 今回のTwinOSのシングルコア分割制御実装は，TwinOSと同じか．(乃村)
A5: TwinOSの実装には，いくつかの問題点があったため，

Q6: メモリを分割し利用しているということは，一つ一つのOSが使用できる領
    域が減ることになるが，それは問題にならないのか．(名古屋)
A6: 現在，未検討である．

◆反省と感想◆
(1) 修士論文の所属の記述を間違えるという重大なミスを犯してしまった．こ
    れは，日頃の注意力のなさが原因である．重要な書類の作成時は，普段以
    上に注意する．
(2) 知識不足から，Q2の質問への回答が曖昧な表現になってしまった．自身の
    研究に関連する事柄については，事前に勉強しておく．
(3) 発表中視線が定まらなかった．聴講者を見て発表することを意識する．
(4) 緊張からか，言葉が詰まってしまった．話す内容を推測できるようなスラ
    イドを作成する．また，発表の難しい箇所については，他の箇所よりも入
    念に練習する．